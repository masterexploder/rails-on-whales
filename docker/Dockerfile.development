# Make sure this matches the ruby version specified in your
# Gemfile. For example, if the Gemfile contains:
#
#   ruby '2.6.3'
#
# Then you'd specify the RUBY_VERSION as 2.6.3-slim. Make sure
# to use the slim images if possible.
ARG RUBY_VERSION
FROM ruby:$RUBY_VERSION

# ----- VERSIONS / CONFIG ----
ARG PG_MAGOR
ARG NODE_MAJOR
ARG BUNDLER_VERSION
ARG RUBYGEMS_VERSION
ARG YARN_VERSION

ENV LANG=C.UTF-8
ENV GEM_HOME=/gems
ENV BUNDLE_JOBS=4
ENV BUNDLE_RETRY=3
ENV BUNDLE_PATH $GEM_HOME
ENV BUNDLE_APP_CONFIG=$BUNDLE_PATH
ENV BUNDLE_BIN=$BUNDLE_PATH/bin
ENV PATH /usr/src/app/bin:$BUNDLE_BIN:$PATH

# ----- PACKAGE INSTALLATION -----
#
# If you need specific libraries installed for your particular
# Rails app (e.g. graphicsmagick for image manipulation), add those
# to the Aptfile. Do not modify the apt-get install commands below

RUN echo 'install: --no-document\nupdate: --no-document' >> "$HOME/.gemrc"

RUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \
  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends curl gnupg

# Add PostgreSQL to sources list
RUN curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list

# Add NodeJS to sources list
RUN curl -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -

# Add Yarn to the sources list
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list

# Install Dependencies
COPY docker/Aptfile /tmp/Aptfile
RUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
  build-essential \
  libpq-dev \
  postgresql-client-$PG_MAJOR \
  nodejs \
  yarn=$YARN_VERSION-1 \
  $(cat /tmp/Aptfile | xargs) && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
  truncate -s 0 /var/log/*log

# ----- RUBY / RUBYGEMS / BUNDLER SETUP -----
RUN gem update --system $RUBYGEMS_VERSION
RUN gem install bundler:$BUNDLER_VERSION \
  && bundle config --global path "$GEM_HOME" \
  && bundle config --global bin "$GEM_HOME/bin"

# ----- RAILS / APPLICATION SETUP -----
WORKDIR /usr/src/app
